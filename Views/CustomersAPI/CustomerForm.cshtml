@model MVC.ViewModels.CustomerFormViewModel

@{
    ViewBag.Title = "CustomerForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CustomerForm</h2>

@*// MVC: "Create" is a target action for this form*@

@using (Html.BeginForm("SaveCustomer", "CustomersAPI"))
{

    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Name)
        @Html.TextBoxFor(model => model.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Family)
        @Html.TextBoxFor(model => model.Customer.Family, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Customer.Family)
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Customer.MembershipTypeId)

        @*// MVC: sortDropDownListitems using LINQ *@
        @Html.DropDownListFor(model => model.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes.OrderBy(m => m.Name), "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @*,htmlAttributes: new { @class = "form-control" }*@

        @Html.ValidationMessageFor(model => model.Customer.MembershipTypeId)  @*// MVC: implement in custom validation for user age*@ 
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Birthdate)
            @Html.TextBoxFor(model => model.Customer.Birthdate, "{0:MM-dd-yyyy}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customer.Birthdate)
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Customer.IsSubscribedToNewsletter)
            @Html.CheckBoxFor(model => model.Customer.IsSubscribedToNewsletter, new { @class = "form-control" })
        </div>*@


        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(model => model.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter?
            </label>
        </div>

        @Html.AntiForgeryToken()

        <div class="form-group">
            <button type="submit" value="Create" class="btn btn-primary" onclick="return confirm('Are you sure you wish to save this customer?');">Save</button>            
        </div>

        // MVC: We relying on CustomerId but we haven’t it on the form, so we must add this field as a hidden to form.
        @Html.HiddenFor(model => model.Customer.Id)
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts {
    
    @Scripts.Render("~/bundles/jqueryval");

}
